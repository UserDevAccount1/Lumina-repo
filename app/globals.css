@import "tailwindcss";

:root {
	--background: #ffffff;
	--foreground: #171717;
}

/* @theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
} */

/* @media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
} */

@theme {
	--color-primary: #d54542;
	--color-para: #535353;
	--color-accent: #FFF7F6;
--color-temp: #0B081D;

}

@font-face {
	font-family: "Proxima Nova";
	src: url("/fonts/Fontspring-DEMO-proximanova-thin.otf") format("opentype");
	font-weight: 100;
	font-style: normal;
}

@font-face {
	font-family: "Proxima Nova";
	src: url("/fonts/Fontspring-DEMO-proximanova-light.otf") format("opentype");
	font-weight: 300;
	font-style: normal;
}

@font-face {
	font-family: "Proxima Nova";
	src: url("/fonts/Fontspring-DEMO-proximanova-regular.otf") format("opentype");
	font-weight: 400;
	font-style: normal;
}

@font-face {
	font-family: "Proxima Nova";
	src: url("/fonts/Fontspring-DEMO-proximanova-medium.otf") format("opentype");
	font-weight: 500;
	font-style: normal;
}

@font-face {
	font-family: "Proxima Nova";
	src: url("/fonts/Fontspring-DEMO-proximanova-semibold.otf") format("opentype");
	font-weight: 600;
	font-style: normal;
}

@font-face {
	font-family: "Proxima Nova";
	src: url("/fonts/Fontspring-DEMO-proximanova-bold.otf") format("opentype");
	font-weight: 700;
	font-style: normal;
}

@font-face {
	font-family: "Proxima Nova";
	src: url("/fonts/Fontspring-DEMO-proximanova-extrabold.otf")
		format("opentype");
	font-weight: 800;
	font-style: normal;
}

@font-face {
	font-family: "Proxima Nova";
	src: url("/fonts/Fontspring-DEMO-proximanova-black.otf") format("opentype");
	font-weight: 900;
	font-style: normal;
}

body {
	background: var(--background);
	color: var(--foreground);
	font-family: "Proxima Nova", sans-serif;
}

@keyframes scroll {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-50%);
  }
}

.animate-scroll {
  display: flex;
  width: max-content;
  animation: scroll 20s linear infinite;
}
